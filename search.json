[{"path":"https://kevinrue.github.io/velociraptor/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Kevin Rue-Albrecht Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kevinrue.github.io/velociraptor/articles/velociraptor.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Computing RNA velocity in a Bioconductor framework","text":"package provides lightweight interface Bioconductor SingleCellExperiment data structure scvelo Python package RNA velocity calculations. interface comparable many SingleCellExperiment-compatible functions, allowing users plug RNA velocity calculations existing Bioconductor analysis framework. demonstrate, use data set Hermann et al. (2018), provided via scRNAseq package. data set contains gene-wise estimates spliced unspliced UMI counts 2,325 mouse spermatogenic cells.","code":"library(scRNAseq) sce <- HermannSpermatogenesisData() sce ## class: SingleCellExperiment  ## dim: 54448 2325  ## metadata(0): ## assays(2): spliced unspliced ## rownames(54448): ENSMUSG00000102693.1 ENSMUSG00000064842.1 ... ##   ENSMUSG00000064369.1 ENSMUSG00000064372.1 ## rowData names(0): ## colnames(2325): CCCATACTCCGAAGAG AATCCAGTCATCTGCC ... ATCCACCCACCACCAG ##   ATTGGTGGTTACCGAT ## colData names(1): celltype ## reducedDimNames(0): ## mainExpName: NULL ## altExpNames(0):"},{"path":"https://kevinrue.github.io/velociraptor/articles/velociraptor.html","id":"downsampling-for-demonstration","dir":"Articles","previous_headings":"","what":"Downsampling for demonstration","title":"Computing RNA velocity in a Bioconductor framework","text":"full data set requires 12 GB memory example usage presented vignette. demonstration purposes, downsample data set first 500 cells. Feel free skip downsampling step access sufficient memory.","code":"sce <- sce[, 1:500]"},{"path":"https://kevinrue.github.io/velociraptor/articles/velociraptor.html","id":"basic-workflow","dir":"Articles","previous_headings":"","what":"Basic workflow","title":"Computing RNA velocity in a Bioconductor framework","text":"assume feature selection already performed user using method (see suggestions). case, use variance log-expressions scran select top 2000 genes. can plug choices scvelo() function SingleCellExperiment object. default, scvelo() uses steady-state approach estimate velocities, though stochastic dynamical models implemented scvelo can also used modifying mode argument. Note automatic neighbor calculation deprecated since scvelo==0.4.0 removed future version. Instead, velociraptor computes neighbors Scanpy (per scVelo recommendations), number neighbors supplied scanpy.pp.neighbors demonstrated . particular, default number neighbors 30 scvelo.pp.moments 15 scanpy.pp.neighbors. Users use scvelo.params=list(neighbors=list(n_neighbors=30L) reproduce earlier results. call, use \"spliced\" count matrix proxy typical exonic count matrix. Technically, latter required velocity estimation, scvelo needs perform PCA nearest neighbors search, want ensure neighbors detected inside function consistent rest analysis workflow (performed exonic counts). subtle differences spliced count matrix typical exonic count matrix - see ?scvelo commentary - spliced counts generally satisfactory replacement latter available. scvelo() function produces SingleCellExperiment containing outputs calculation Python. particular interest velocity_pseudotime vector captures relative progression cell along biological process driving velocity vectors. can visualize effect tt-SNE plot generated scater top HVGs.  also straightforward embed velocity vectors desired low-dimensional space, shown tt-SNE coordinates. uses grid-based approach summarize per-cell vectors local representatives effective visualization.  ’s , really.","code":"library(scuttle) sce <- logNormCounts(sce, assay.type=1)  library(scran) dec <- modelGeneVar(sce) top.hvgs <- getTopHVGs(dec, n=2000) library(velociraptor) velo.out <- scvelo(   sce, subset.row=top.hvgs, assay.X=\"spliced\",   scvelo.params=list(neighbors=list(n_neighbors=30L)) ) ## computing moments based on connectivities ##     finished (0:00:00) --> added  ##     'Ms' and 'Mu', moments of un/spliced abundances (adata.layers) ## computing velocities ##     finished (0:00:00) --> added  ##     'velocity', velocity vectors for each individual cell (adata.layers) ## computing velocity graph (using 1/4 cores) ##   0%|          | 0/500 [00:00<?, ?cells/s] ##     finished (0:00:00) --> added  ##     'velocity_graph', sparse matrix with cosine correlations (adata.uns) ## computing terminal states ##     identified 1 region of root cells and 1 region of end points . ##     finished (0:00:00) --> added ##     'root_cells', root cells of Markov diffusion process (adata.obs) ##     'end_points', end points of Markov diffusion process (adata.obs) ## --> added 'velocity_length' (adata.obs) ## --> added 'velocity_confidence' (adata.obs) ## --> added 'velocity_confidence_transition' (adata.obs) velo.out ## class: SingleCellExperiment  ## dim: 2000 500  ## metadata(4): neighbors velocity_params velocity_graph ##   velocity_graph_neg ## assays(6): X spliced ... Mu velocity ## rownames(2000): ENSMUSG00000117819.1 ENSMUSG00000081984.3 ... ##   ENSMUSG00000022965.8 ENSMUSG00000094660.2 ## rowData names(4): velocity_gamma velocity_qreg_ratio velocity_r2 ##   velocity_genes ## colnames(500): CCCATACTCCGAAGAG AATCCAGTCATCTGCC ... CACCTTGTCGTAGGAG ##   TTCCCAGAGACTAAGT ## colData names(7): velocity_self_transition root_cells ... ##   velocity_confidence velocity_confidence_transition ## reducedDimNames(1): X_pca ## mainExpName: NULL ## altExpNames(0): library(scater)  set.seed(100) sce <- runPCA(sce, subset_row=top.hvgs) sce <- runTSNE(sce, dimred=\"PCA\", perplexity = 30)  sce$velocity_pseudotime <- velo.out$velocity_pseudotime plotTSNE(sce, colour_by=\"velocity_pseudotime\") embedded <- embedVelocity(reducedDim(sce, \"TSNE\"), velo.out) ## computing velocity embedding ##     finished (0:00:00) --> added ##     'velocity_target', embedded velocity vectors (adata.obsm) grid.df <- gridVectors(sce, embedded, use.dimred = \"TSNE\")  library(ggplot2) plotTSNE(sce, colour_by=\"velocity_pseudotime\") +     geom_segment(data=grid.df, mapping=aes(x=start.1, y=start.2,          xend=end.1, yend=end.2, colour=NULL), arrow=arrow(length=unit(0.05, \"inches\")))"},{"path":"https://kevinrue.github.io/velociraptor/articles/velociraptor.html","id":"advanced-options","dir":"Articles","previous_headings":"","what":"Advanced options","title":"Computing RNA velocity in a Bioconductor framework","text":"scvelo() interally performs PCA step can bypass supplying PC coordinates. Indeed, often case already performed PCA earlier analysis steps, can just re-use results () save time (ii) improve consistency steps. , computed PCA coordinates runPCA() , let’s just recycle : also provide option use scvelo pipeline without modification, .e., relying normalization feature selection. sacrifices consistency Bioconductor workflows enables perfect mimicry pure Python-based analysis. case, arguments like subset.row= simply ignored. Advanced users can tinker settings individual scvelo steps setting named lists arguments scvelo.params= argument. example, tinker behavior recover_dynamics step, :","code":"# Only setting assay.X= for the initial AnnData creation, # it is not actually used in any further steps. velo.out2 <- scvelo(sce, assay.X=1, subset.row=top.hvgs, use.dimred=\"PCA\") ## computing moments based on connectivities ##     finished (0:00:00) --> added  ##     'Ms' and 'Mu', moments of un/spliced abundances (adata.layers) ## computing velocities ##     finished (0:00:00) --> added  ##     'velocity', velocity vectors for each individual cell (adata.layers) ## computing velocity graph (using 1/4 cores) ##   0%|          | 0/500 [00:00<?, ?cells/s] ##     finished (0:00:00) --> added  ##     'velocity_graph', sparse matrix with cosine correlations (adata.uns) ## computing terminal states ##     identified 3 regions of root cells and 1 region of end points . ##     finished (0:00:00) --> added ##     'root_cells', root cells of Markov diffusion process (adata.obs) ##     'end_points', end points of Markov diffusion process (adata.obs) ## --> added 'velocity_length' (adata.obs) ## --> added 'velocity_confidence' (adata.obs) ## --> added 'velocity_confidence_transition' (adata.obs) velo.out2 ## class: SingleCellExperiment  ## dim: 2000 500  ## metadata(4): neighbors velocity_params velocity_graph ##   velocity_graph_neg ## assays(6): X spliced ... Mu velocity ## rownames(2000): ENSMUSG00000117819.1 ENSMUSG00000081984.3 ... ##   ENSMUSG00000022965.8 ENSMUSG00000094660.2 ## rowData names(4): velocity_gamma velocity_qreg_ratio velocity_r2 ##   velocity_genes ## colnames(500): CCCATACTCCGAAGAG AATCCAGTCATCTGCC ... CACCTTGTCGTAGGAG ##   TTCCCAGAGACTAAGT ## colData names(7): velocity_self_transition root_cells ... ##   velocity_confidence velocity_confidence_transition ## reducedDimNames(1): X_pca ## mainExpName: NULL ## altExpNames(0): velo.out3 <- scvelo(sce, assay.X=1, use.theirs=TRUE) ## WARNING: Did not normalize X as it looks processed already. To enforce normalization, set `enforce=True`. ## WARNING: Did not normalize spliced as it looks processed already. To enforce normalization, set `enforce=True`. ## WARNING: Did not normalize unspliced as it looks processed already. To enforce normalization, set `enforce=True`. ## Logarithmized X. ## computing moments based on connectivities ##     finished (0:00:01) --> added  ##     'Ms' and 'Mu', moments of un/spliced abundances (adata.layers) ## computing velocities ##     finished (0:00:02) --> added  ##     'velocity', velocity vectors for each individual cell (adata.layers) ## computing velocity graph (using 1/4 cores) ##   0%|          | 0/500 [00:00<?, ?cells/s] ##     finished (0:00:00) --> added  ##     'velocity_graph', sparse matrix with cosine correlations (adata.uns) ## computing terminal states ##     identified 1 region of root cells and 1 region of end points . ##     finished (0:00:00) --> added ##     'root_cells', root cells of Markov diffusion process (adata.obs) ##     'end_points', end points of Markov diffusion process (adata.obs) ## --> added 'velocity_length' (adata.obs) ## --> added 'velocity_confidence' (adata.obs) ## --> added 'velocity_confidence_transition' (adata.obs) velo.out3 ## class: SingleCellExperiment  ## dim: 54448 500  ## metadata(6): log1p pca ... velocity_graph velocity_graph_neg ## assays(6): X spliced ... Mu velocity ## rownames(54448): ENSMUSG00000102693.1 ENSMUSG00000064842.1 ... ##   ENSMUSG00000064369.1 ENSMUSG00000064372.1 ## rowData names(5): velocity_gamma velocity_qreg_ratio velocity_r2 ##   velocity_genes varm ## colnames(500): CCCATACTCCGAAGAG AATCCAGTCATCTGCC ... CACCTTGTCGTAGGAG ##   TTCCCAGAGACTAAGT ## colData names(11): initial_size_unspliced initial_size_spliced ... ##   velocity_confidence velocity_confidence_transition ## reducedDimNames(1): X_pca ## mainExpName: NULL ## altExpNames(0): velo.out4 <- scvelo(sce, assay.X=1, subset.row=top.hvgs,     scvelo.params=list(recover_dynamics=list(max_iter=20))) ## computing moments based on connectivities ##     finished (0:00:00) --> added  ##     'Ms' and 'Mu', moments of un/spliced abundances (adata.layers) ## computing velocities ##     finished (0:00:00) --> added  ##     'velocity', velocity vectors for each individual cell (adata.layers) ## computing velocity graph (using 1/4 cores) ##   0%|          | 0/500 [00:00<?, ?cells/s] ##     finished (0:00:00) --> added  ##     'velocity_graph', sparse matrix with cosine correlations (adata.uns) ## computing terminal states ##     identified 2 regions of root cells and 1 region of end points . ##     finished (0:00:00) --> added ##     'root_cells', root cells of Markov diffusion process (adata.obs) ##     'end_points', end points of Markov diffusion process (adata.obs) ## --> added 'velocity_length' (adata.obs) ## --> added 'velocity_confidence' (adata.obs) ## --> added 'velocity_confidence_transition' (adata.obs) velo.out4 ## class: SingleCellExperiment  ## dim: 2000 500  ## metadata(4): neighbors velocity_params velocity_graph ##   velocity_graph_neg ## assays(6): X spliced ... Mu velocity ## rownames(2000): ENSMUSG00000117819.1 ENSMUSG00000081984.3 ... ##   ENSMUSG00000022965.8 ENSMUSG00000094660.2 ## rowData names(4): velocity_gamma velocity_qreg_ratio velocity_r2 ##   velocity_genes ## colnames(500): CCCATACTCCGAAGAG AATCCAGTCATCTGCC ... CACCTTGTCGTAGGAG ##   TTCCCAGAGACTAAGT ## colData names(7): velocity_self_transition root_cells ... ##   velocity_confidence velocity_confidence_transition ## reducedDimNames(1): X_pca ## mainExpName: NULL ## altExpNames(0):"},{"path":"https://kevinrue.github.io/velociraptor/articles/velociraptor.html","id":"session-information","dir":"Articles","previous_headings":"","what":"Session information","title":"Computing RNA velocity in a Bioconductor framework","text":"","code":"sessionInfo() ## R version 4.4.1 (2024-06-14) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 22.04.5 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 ##  ## locale: ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    ##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats4    stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] scater_1.33.4               ggplot2_3.5.1               ##  [3] velociraptor_1.15.13        scran_1.33.2                ##  [5] scuttle_1.15.4              scRNAseq_2.19.1             ##  [7] SingleCellExperiment_1.27.2 SummarizedExperiment_1.35.4 ##  [9] Biobase_2.65.1              GenomicRanges_1.57.2        ## [11] GenomeInfoDb_1.41.2         IRanges_2.39.2              ## [13] S4Vectors_0.43.2            BiocGenerics_0.51.3         ## [15] MatrixGenerics_1.17.0       matrixStats_1.4.1           ## [17] knitr_1.48                  BiocStyle_2.33.1            ##  ## loaded via a namespace (and not attached): ##   [1] jsonlite_1.8.9           magrittr_2.0.3           ggbeeswarm_0.7.2         ##   [4] GenomicFeatures_1.57.1   gypsum_1.1.6             farver_2.1.2             ##   [7] rmarkdown_2.28           fs_1.6.4                 BiocIO_1.15.2            ##  [10] zlibbioc_1.51.1          ragg_1.3.3               vctrs_0.6.5              ##  [13] memoise_2.0.1            Rsamtools_2.21.2         RCurl_1.98-1.16          ##  [16] htmltools_0.5.8.1        S4Arrays_1.5.10          AnnotationHub_3.13.3     ##  [19] curl_5.2.3               BiocNeighbors_1.99.2     Rhdf5lib_1.27.0          ##  [22] SparseArray_1.5.44       rhdf5_2.49.0             sass_0.4.9               ##  [25] alabaster.base_1.5.9     bslib_0.8.0              htmlwidgets_1.6.4        ##  [28] basilisk_1.17.2          desc_1.4.3               alabaster.sce_1.5.1      ##  [31] httr2_1.0.5              cachem_1.1.0             GenomicAlignments_1.41.0 ##  [34] igraph_2.0.3             lifecycle_1.0.4          pkgconfig_2.0.3          ##  [37] rsvd_1.0.5               Matrix_1.7-0             R6_2.5.1                 ##  [40] fastmap_1.2.0            GenomeInfoDbData_1.2.13  digest_0.6.37            ##  [43] colorspace_2.1-1         AnnotationDbi_1.67.0     dqrng_0.4.1              ##  [46] irlba_2.3.5.1            ExperimentHub_2.13.1     textshaping_0.4.0        ##  [49] RSQLite_2.3.7            beachmat_2.21.6          labeling_0.4.3           ##  [52] filelock_1.0.3           fansi_1.0.6              httr_1.4.7               ##  [55] abind_1.4-8              compiler_4.4.1           withr_3.0.1              ##  [58] bit64_4.5.2              BiocParallel_1.39.0      viridis_0.6.5            ##  [61] DBI_1.2.3                highr_0.11               HDF5Array_1.33.8         ##  [64] alabaster.ranges_1.5.2   alabaster.schemas_1.5.0  rappdirs_0.3.3           ##  [67] DelayedArray_0.31.14     rjson_0.2.23             bluster_1.15.1           ##  [70] tools_4.4.1              vipor_0.4.7              beeswarm_0.4.0           ##  [73] glue_1.8.0               restfulr_0.0.15          rhdf5filters_1.17.0      ##  [76] grid_4.4.1               Rtsne_0.17               cluster_2.1.6            ##  [79] generics_0.1.3           gtable_0.3.5             ensembldb_2.29.1         ##  [82] metapod_1.13.0           BiocSingular_1.21.4      ScaledMatrix_1.13.0      ##  [85] utf8_1.2.4               XVector_0.45.0           ggrepel_0.9.6            ##  [88] BiocVersion_3.20.0       pillar_1.9.0             limma_3.61.12            ##  [91] dplyr_1.1.4              BiocFileCache_2.13.0     lattice_0.22-6           ##  [94] rtracklayer_1.65.0       bit_4.5.0                tidyselect_1.2.1         ##  [97] locfit_1.5-9.10          Biostrings_2.73.2        gridExtra_2.3            ## [100] bookdown_0.40            ProtGenerics_1.37.1      edgeR_4.3.17             ## [103] xfun_0.48                statmod_1.5.0            UCSC.utils_1.1.0         ## [106] lazyeval_0.2.2           yaml_2.3.10              evaluate_1.0.0           ## [109] codetools_0.2-20         tibble_3.2.1             alabaster.matrix_1.5.10  ## [112] BiocManager_1.30.25      cli_3.6.3                reticulate_1.39.0.9000   ## [115] systemfonts_1.1.0        munsell_0.5.1            jquerylib_0.1.4          ## [118] zellkonverter_1.15.3     Rcpp_1.0.13              dir.expiry_1.13.0        ## [121] dbplyr_2.5.0             png_0.1-8                XML_3.99-0.17            ## [124] parallel_4.4.1           pkgdown_2.1.1            blob_1.2.4               ## [127] basilisk.utils_1.17.3    AnnotationFilter_1.29.0  bitops_1.0-9             ## [130] viridisLite_0.4.2        alabaster.se_1.5.3       scales_1.3.0             ## [133] crayon_1.5.3             rlang_1.1.4              cowplot_1.1.3            ## [136] KEGGREST_1.45.1"},{"path":[]},{"path":"https://kevinrue.github.io/velociraptor/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kevin Rue-Albrecht. Author, maintainer. Aaron Lun. Author. Charlotte Soneson. Author. Michael Stadler. Author.","code":""},{"path":"https://kevinrue.github.io/velociraptor/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rue-Albrecht K, Lun , Soneson C, Stadler M (2024). velociraptor: Toolkit Single-Cell Velocity. R package version 1.15.13, https://github.com/kevinrue/velociraptor.","code":"@Manual{,   title = {velociraptor: Toolkit for Single-Cell Velocity},   author = {Kevin Rue-Albrecht and Aaron Lun and Charlotte Soneson and Michael Stadler},   year = {2024},   note = {R package version 1.15.13},   url = {https://github.com/kevinrue/velociraptor}, }"},{"path":"https://kevinrue.github.io/velociraptor/index.html","id":"velociraptor","dir":"","previous_headings":"","what":"Toolkit for Single-Cell Velocity","title":"Toolkit for Single-Cell Velocity","text":"velociraptor provides R toolkit single-cell velocity computation.","code":""},{"path":[]},{"path":"https://kevinrue.github.io/velociraptor/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Toolkit for Single-Cell Velocity","text":"velociraptor can easily installed Bioconductor using BiocManager::install(): Setting dependencies = TRUE ensure packages, including ones Suggests: field DESCRIPTION file, installed - can essential want reproduce code vignette, example.","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\") BiocManager::install(\"velociraptor\") # or also... BiocManager::install(\"velociraptor\", dependencies = TRUE)"},{"path":"https://kevinrue.github.io/velociraptor/reference/embedVelocity.html","id":null,"dir":"Reference","previous_headings":"","what":"Project velocities onto an embedding — embedVelocity","title":"Project velocities onto an embedding — embedVelocity","text":"Project velocity vector cell onto existing low-dimensional embedding.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/embedVelocity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project velocities onto an embedding — embedVelocity","text":"","code":"embedVelocity(x, vobj, ...)  # S4 method for class 'ANY' embedVelocity(x, vobj, ...)  # S4 method for class 'SingleCellExperiment' embedVelocity(x, vobj, ..., use.dimred = 1)"},{"path":"https://kevinrue.github.io/velociraptor/reference/embedVelocity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project velocities onto an embedding — embedVelocity","text":"x numeric matrix low-dimensional coordinates, e.g., t-SNE. Alternatively, SingleCellExperiment containing coordinates reducedDims. vobj SingleCellExperiment containing output velocity calculations, typically running scvelo. ... generic, arguments pass specific methods. method, arguments pass velocity_embedding Python function scVelo. SingleCellExperiment method, arguments pass method. use.dimred String integer scalar specifying reduced dimensions retrieve x.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/embedVelocity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project velocities onto an embedding — embedVelocity","text":"numeric matrix dimensions x, containing projected velocity vectors embedding.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/embedVelocity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Project velocities onto an embedding — embedVelocity","text":"simple wrapper around scvelo.tools.velocity_embedding function. Briefly, construct cell-cell transition matrix cell likely transition one neighbors velocity vector pointing direction neighbor. resulting matrix used compute weighted average positions x, allowing us compute velocity low-dimensional embedding.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/embedVelocity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Project velocities onto an embedding — embedVelocity","text":"Aaron Lun","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/embedVelocity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Project velocities onto an embedding — embedVelocity","text":"","code":"example(scvelo, echo=FALSE) # recycling that example. #> Loading required package: SingleCellExperiment  # Making up a new embedding. tsne.results <- matrix(rnorm(2*ncol(out)), ncol=2)  # Projecting the future state of each cell: projected <- embedVelocity(tsne.results, out) #> ℹ Using the 'X' assay as the X matrix"},{"path":"https://kevinrue.github.io/velociraptor/reference/gridVectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize vectors into a grid — gridVectors","title":"Summarize vectors into a grid — gridVectors","text":"Summarize velocity vectors grid, usually easy plotting.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/gridVectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize vectors into a grid — gridVectors","text":"","code":"gridVectors(x, embedded, ...)  # S4 method for class 'ANY' gridVectors(   x,   embedded,   resolution = 40,   scale = TRUE,   as.data.frame = TRUE,   return.intermediates = FALSE )  # S4 method for class 'SingleCellExperiment' gridVectors(x, embedded, ..., use.dimred = 1)"},{"path":"https://kevinrue.github.io/velociraptor/reference/gridVectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize vectors into a grid — gridVectors","text":"x numeric matrix low-dimensional coordinates, e.g., t-SNE. Alternatively, SingleCellExperiment containing coordinates reducedDims. embedded low-dimensional projection velocity vectors embedding x. dimensions x typically produced embedVelocity. ... generic, arguments pass specific methods. SingleCellExperiment method, arguments pass method. resolution Integer scalar specifying resolution grid, terms number grid intervals along axis. scale Logical scalar indicating whether averaged vectors scaled grid resolution. .data.frame Logical scalar indicating whether output data.frame. FALSE, list two matrices returned. return.intermediates Logical scalar indicating whether intermediate objects also returned. enforces .data.frame=FALSE throws warning TRUE. use.dimred String integer scalar specifying reduced dimensions retrieve x.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/gridVectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize vectors into a grid — gridVectors","text":".data.frame=FALSE, list returned containing start end, two numeric matrices one row per non-empty block grid one column per column x. start contains mean location cells inside block, end contains endpoint adding (scaled) average block's cell's velocity vectors. .data.frame=TRUE, data.frame returned numeric columns contents list . Column names prefixed start.* end.*. return.intermediates=TRUE, list returned (irrespective value .data.frame) addition start end also contains intermediate objects limits (ranges x y), delta (grid intervals x y), categories (DataFrame integer row column indices cell specify grid field contained ), grp (numerical index grid fields cell) vec (velocity vectors non-empty grid fields).","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/gridVectors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize vectors into a grid — gridVectors","text":"partitions bounding box x grid resolution units dimension. locations vectors cells block averaged obtain representative block. obviously useful visualization avoid overplotting velocity vectors. scale=TRUE, per-block vectors scaled median vector length comparable spacing blocks. improves visualization scales x embedded immediately comparable.","code":""},{"path":[]},{"path":"https://kevinrue.github.io/velociraptor/reference/gridVectors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarize vectors into a grid — gridVectors","text":"Aaron Lun","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/gridVectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize vectors into a grid — gridVectors","text":"","code":"tsne.results <- matrix(rnorm(10000), ncol=2) tsne.vectors <- matrix(rnorm(10000), ncol=2)  out <- gridVectors(tsne.results, tsne.vectors)  # Demonstration for plotting. plot(tsne.results[,1], tsne.results[,2], col='grey') arrows(out$start.1, out$start.2, out$end.1, out$end.2, length=0.05)"},{"path":"https://kevinrue.github.io/velociraptor/reference/plotVelocity.html","id":null,"dir":"Reference","previous_headings":"","what":"Phase and velocity graphs for a set of genes — plotVelocity","title":"Phase and velocity graphs for a set of genes — plotVelocity","text":"gene set genes, show phase graph (spliced versus unspliced counts fitted model) reduced dimension graphs cell colored velocity (spliced) expression.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/plotVelocity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Phase and velocity graphs for a set of genes — plotVelocity","text":"","code":"plotVelocity(   x,   genes,   use.dimred = 1,   assay.splicedM = \"Ms\",   assay.unsplicedM = \"Mu\",   which.plots = c(\"phase\", \"velocity\", \"expression\"),   genes.per.row = 1,   color_by = \"#222222\",   color.alpha = 0.4,   colors.velocity = c(\"#A50026\", \"#D73027\", \"#F46D43\", \"#FDAE61\", \"#FEE08B\", \"#FFFFBF\",     \"#D9EF8B\", \"#A6D96A\", \"#66BD63\", \"#1A9850\", \"#006837\"),   colors.expression = c(\"#440154\", \"#482576\", \"#414487\", \"#35608D\", \"#2A788E\", \"#21908C\",     \"#22A884\", \"#43BF71\", \"#7AD151\", \"#BBDF27\", \"#FDE725\"),   max.abs.velo = 0.001 )"},{"path":"https://kevinrue.github.io/velociraptor/reference/plotVelocity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Phase and velocity graphs for a set of genes — plotVelocity","text":"x SingleCellExperiment object RNA velocity results returned scvelo, low-dimensional coordinates, e.g., t-SNE, reducedDims. genes character vector one several genes plot phase velocity graphs. genes rownames(x). use.dimred String integer scalar specifying reduced dimensions retrieve x. assay.splicedM integer scalar string specifying assay x containing moments spliced abundances. assay.unsplicedM integer scalar string specifying assay x containing moments unspliced abundances. .plots character vector specifying plots create gene. Possible values \"phase\", \"velocity\", \"expression\" correspond phase graph reduced dimension graphs cells colored velocity (spliced) expression. genes.per.row integer scalar numbers genes visualize per row plots. example, .plots =  c(\"phase\",\"expression\") genes.per.row = 2, resulting figure four plot panels per row. color_by character scalar specifying column colData(x) color cells phase graph. Alternatively, color_by can set vector valid R colors, either length one (recycled cells) length ncol(x), used color cells phase graph. color.alpha integer scalar giving transparency colored cells. Possible values 0 (fully transparent) 1.0 (opaque). colors.velocity, colors.expression Character vectors specifying color ranges used mapping velocities expression values. defaults RColorBrewer::brewer.pal(11, \"RdYlGn\") velocities viridisLite::viridis(11) expression values. max.abs.velo numeric scalar greater zero giving maximum absolute velocity limit color scale \"velocity\" graph.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/plotVelocity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Phase and velocity graphs for a set of genes — plotVelocity","text":"patchwork object plots selected .plot   genes genes, arranged grid according genes.per.row.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/plotVelocity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Phase and velocity graphs for a set of genes — plotVelocity","text":"Please note plotVelocity modify parameters   current graphics device using layout par,   order create layout generated graph panels.","code":""},{"path":[]},{"path":"https://kevinrue.github.io/velociraptor/reference/plotVelocity.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Phase and velocity graphs for a set of genes — plotVelocity","text":"Michael Stadler","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/plotVelocity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Phase and velocity graphs for a set of genes — plotVelocity","text":"","code":"library(scuttle) set.seed(42) sce1 <- mockSCE(ncells = 100, ngenes = 500) sce2 <- mockSCE(ncells = 100, ngenes = 500)  datlist <- list(X=counts(sce1), spliced=counts(sce1), unspliced=counts(sce2))  out1 <- scvelo(datlist, mode = \"steady_state\") out2 <- scvelo(datlist, mode = \"dynamical\")  plotVelocity(out1, c(\"Gene_0031\",\"Gene_0268\"))  plotVelocity(out2, c(\"Gene_0031\",\"Gene_0268\"))"},{"path":"https://kevinrue.github.io/velociraptor/reference/plotVelocityStream.html","id":null,"dir":"Reference","previous_headings":"","what":"Velocity stream plot in low-dimensional space — plotVelocityStream","title":"Velocity stream plot in low-dimensional space — plotVelocityStream","text":"Plot velocities embedded low-dimensional space stream plot. Stream lines lines follow gradient velocity field illustrate paths cells follow based observed RNA velocities.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/plotVelocityStream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Velocity stream plot in low-dimensional space — plotVelocityStream","text":"","code":"plotVelocityStream(   sce,   embedded,   use.dimred = 1,   color_by = \"#444444\",   color.alpha = 0.2,   grid.resolution = 60,   scale = TRUE,   stream.L = 10,   stream.min.L = 0,   stream.res = 4,   stream.width = 8,   color.streamlines = FALSE,   color.streamlines.map = c(\"#440154\", \"#482576\", \"#414487\", \"#35608D\", \"#2A788E\",     \"#21908C\", \"#22A884\", \"#43BF71\", \"#7AD151\", \"#BBDF27\", \"#FDE725\"),   arrow.angle = 8,   arrow.length = 0.8 )"},{"path":"https://kevinrue.github.io/velociraptor/reference/plotVelocityStream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Velocity stream plot in low-dimensional space — plotVelocityStream","text":"sce SingleCellExperiment object containing low-dimensional coordinates, e.g., t-SNE, reducedDims. embedded low-dimensional projection velocity vectors embedding sce. dimensions sce typically produced embedVelocity. use.dimred String integer scalar specifying reduced dimensions retrieve sce. color_by character scalar specifying column colData(sce) color cells phase graph. Alternatively, color_by can set valid R color used color cells. color.alpha integer scalar giving transparency colored cells. Possible values 0 (fully transparent) 1.0 (opaque). grid.resolution Integer scalar specifying resolution grid, terms number grid intervals along axis. scale Logical scalar indicating whether averaged vectors scaled grid resolution. stream.L Integer scalar giving typical length streamline low-dimensional space units. stream.min.L numeric scalar minimum length segments shown. stream.res Numeric scalar specifying resolution estimated streamlines (higher numbers increase smoothness lines also time computation). stream.width numeric scalar controlling width streamlines. color.streamlines Logical scalar. TRUE streamlines colored local velocity. Arrows shown case. color.streamlines.map character vector specifying color range used mapping local velocities streamline colors. default viridisLite::viridis(11). arrow.angle, arrow.length Numeric scalars giving angle length arrowheads.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/plotVelocityStream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Velocity stream plot in low-dimensional space — plotVelocityStream","text":"ggplot2 object streamline plot.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/plotVelocityStream.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Velocity stream plot in low-dimensional space — plotVelocityStream","text":"grid.resolution scale passed   gridVectors, used summarized velocity vectors   initial grid. full regular grid computed used   geom_streamline calculate streamlines.   following arguments passed arguments given parenthesis   geom_streamline:   stream.L (L), stream.res (res),   stream.min.L (min.L), arrow.angle (arrow.angle)   arrow.length (arrow.length).   Streamlines computed simple integration forward Euler method,   stream.L stream.res used compute number   steps time interval steps integration.   stream.width multiplied ..step.. estimated   geom_streamline control width streamlines.","code":""},{"path":[]},{"path":"https://kevinrue.github.io/velociraptor/reference/plotVelocityStream.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Velocity stream plot in low-dimensional space — plotVelocityStream","text":"Michael Stadler","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/plotVelocityStream.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Velocity stream plot in low-dimensional space — plotVelocityStream","text":"","code":"library(scuttle) set.seed(42) sce1 <- mockSCE(ncells = 100, ngenes = 500) sce2 <- mockSCE(ncells = 100, ngenes = 500)  datlist <- list(X=counts(sce1), spliced=counts(sce1), unspliced=counts(sce2))  out <- scvelo(datlist, mode = \"dynamical\")  em <- embedVelocity(reducedDim(out, 1), out)[,1:2] #> ℹ Using the 'X' assay as the X matrix  # https://github.com/kevinrue/velociraptor/issues/90  if (!basilisk.utils::isMacOSX()){ plotVelocityStream(out, em) plotVelocityStream(out, em, color.streamlines = TRUE) } #> Warning: The dot-dot notation (`..step..`) was deprecated in ggplot2 3.4.0. #> ℹ Please use `after_stat(step)` instead. #> ℹ The deprecated feature was likely used in the velociraptor package. #>   Please report the issue at <https://github.com/kevinrue/velociraptor/issues>."},{"path":"https://kevinrue.github.io/velociraptor/reference/scvelo.html","id":null,"dir":"Reference","previous_headings":"","what":"RNA velocity with scVelo — scvelo","title":"RNA velocity with scVelo — scvelo","text":"Perform RNA velocity calculations scVelo package.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/scvelo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RNA velocity with scVelo — scvelo","text":"","code":"scvelo(x, ...)  # S4 method for class 'ANY' scvelo(   x,   subset.row = NULL,   sf.X = NULL,   sf.spliced = NULL,   sf.unspliced = NULL,   use.theirs = FALSE,   mode = c(\"steady_state\", \"deterministic\", \"stochastic\", \"dynamical\"),   scvelo.params = list(),   dimred = NULL,   ncomponents = 30,   BPPARAM = SerialParam(),   BSPARAM = bsparam() )  # S4 method for class 'SummarizedExperiment' scvelo(   x,   ...,   assay.X = \"counts\",   assay.spliced = \"spliced\",   assay.unspliced = \"unspliced\" )  # S4 method for class 'SingleCellExperiment' scvelo(x, ..., sf.X = sizeFactors(x), dimred = NULL, use.dimred = NULL)"},{"path":"https://kevinrue.github.io/velociraptor/reference/scvelo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RNA velocity with scVelo — scvelo","text":"x named list three matrices dimensions genes rows cells columns. list contain \"spliced\" \"unspliced\" entries containing spliced unspliced counts, respectively. also contain \"X\" entry containing “usual” count matrix, see details . Alternatively, SummarizedExperiment object containing three matrices among assays. ... generic, arguments pass specific methods. SummarizedExperiment SingleCellExperiment methods, arguments pass method. subset.row character, integer logical vector specifying genes use velocity calculations. Defaults genes. sf.X numeric vector containing size factors usual count matrix. Defaults librarySizeFactors \"X\" matrix x. sf.spliced numeric vector containing size factors spliced counts cell. Defaults librarySizeFactors \"spliced\" matrix x. sf.unspliced numeric vector containing size factors unspliced counts cell. Defaults librarySizeFactors \"unspliced\" matrix x. use.Logical scalar indicating whether scVelo's gene filtering normalization used. mode String specifying method use estimate transcriptional dynamics. scvelo.params List lists containing arguments individual scVelo functions, see details . dimred low-dimensional representation cells number rows equal number cells x, used find nearest neighbors. ncomponents Numeric scalar indicating number principal components obtain. used use.=FALSE dimred=NULL. BPPARAM BiocParallelParam object specifying whether PCA calculations parallelized. used use.=FALSE dimred=NULL. BSPARAM BiocSingularParam object specifying algorithm used perform PCA. used use.=FALSE dimred=NULL. assay.X integer scalar string specifying assay x containing usual count matrix. assay.spliced integer scalar string specifying assay x containing spliced counts. assay.unspliced integer scalar string specifying assay x containing unspliced counts. use.dimred String naming entry reducedDims(x) use nearest neighbor calculations. Ignored dimred supplied.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/scvelo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RNA velocity with scVelo — scvelo","text":"SingleCellExperiment returned containing output velocity calculations. particular interest : velocity_pseudotime field colData, containing velocity pseudotime cell. velocity entry assays, containing velocity vectors cell. output always number columns equal number cells supplied x, though number rows depend whether subsetting (subset.row supplied) feature selection (use.=TRUE) performed.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/scvelo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"RNA velocity with scVelo — scvelo","text":"function uses scVelo Python package (https://pypi.org/project/scvelo/) RNA velocity calculations. main difference original velocyto approach dynamical model scVelo rely presence observed steady-state populations, improve reliability velocity calculations general applications. consistency Bioconductor workflows, perform many standard steps R can starting velocity calculations scVelo. involves: Size factor-based normalization sf.* values normalizeCounts. \"X\", log-transformation performed well, others, scaling normalization performed. Subsetting matrices subset.row, typically subset interest, e.g., highly variable genes. Note , set, subsetting done normalization library sizes correctly computed. dimred=NULL, PCA step log-expression values derived \"X\" matrix, using specified BSPARAM obtain first ncomponents PCs. allows us guarantee , example, log-expression matrix HVGs PCA coordinates used applications like clustering trajectory reconstruction. Nonetheless, one can set use.=TRUE directly use entire scVelo normalization filtering pipeline. ignores size factors arguments (sf.*), PCA-related arguments (ncomponents, BSPARAM) subset.row. However, low-dimensionality result supplied via dimred use.dimred, scVelo PCA always omitted. Upon first use, function instantiate conda environment containing scVelo package. done via basilisk package - see documentation package trouble-shooting.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/scvelo.html","id":"comments-on-the-three-matrices","dir":"Reference","previous_headings":"","what":"Comments on the three matrices","title":"RNA velocity with scVelo — scvelo","text":"Strictly speaking, spliced unspliced matrices necessary velocity calculations. However, often case spliced matrix actually “usual” count matrix (e.g., generated summing counts across exons mapped genes). due differences handling ambiguous reads map across exon-intron boundaries, genomic regions can either exonic intronic depending isoform; spliced count matrix likely exclude reads. request usual count matrix \"X\" entry x ensure PCA nearest neighbor detection scVelo done data used steps large analysis (e.g., clustering, visualization, trajectory reconstruction). practice, usual count matrix available, one can often achieve satisfactory results simply re-using spliced count matrix \"X\" \"spliced\" entries x. Note reduced dimensions supplied dimred, \"X\" entry used create AnnData object used actual calculations.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/scvelo.html","id":"additional-arguments-to-python","dir":"Reference","previous_headings":"","what":"Additional arguments to Python","title":"RNA velocity with scVelo — scvelo","text":"Additional arguments scVelo functions provided via scvelo.params. named list entry named function named list arguments function. following function names currently recognized: \"filter_and_normalize\", gene selection normalization. used unless use.=TRUE. \"moments\", PCA nearest neighbor detection. PCA performed dimred use.dimred already supplied. \"recover_dynamics\" \"velocity\" \"velocity_graph\" \"velocity_pseudotime\" \"latent_time\" \"velocity_confidence\" See scVelo documentation details available arguments examples syntax example.","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/scvelo.html","id":"supported-operating-systems-and-architectures","dir":"Reference","previous_headings":"","what":"Supported operating systems and architectures","title":"RNA velocity with scVelo — scvelo","text":"scVelo dependencies pinned Conda environment ensure reproducibility. Differences packages versions available Conda require different environments different operating systems architectures. basilisk.utils used determine operating system architecture computer used run scvelo(), using appropriate Conda environment. latest velociraptor update (24 May 2024): environments tqdm ipywidgets installed suppress message \"Unable create progress bar\". Linux scVelo v0.3.2 conda-forge used. latest version available date. libtiff pinned v4.5.1 pillow pinned v10.0.0 (https://github.com/conda-forge/libtiff-feedstock/issues/104#issuecomment-2375893029), scipy pinned v1.13.1 (https://github.com/theislab/scvelo/issues/1260). Linux AArch64 scVelo v0.3.2 conda-forge used. latest version available date. libtiff pinned v4.5.1 pillow pinned v10.0.0 (https://github.com/conda-forge/libtiff-feedstock/issues/104#issuecomment-2375893029), scipy pinned v1.13.1 (https://github.com/theislab/scvelo/issues/1260). Please note environment validated yet; derived environment Linux () requires additional testing identify working environment pinning packages versions environment. macOS scVelo v0.3.2 conda-forge used. latest version available date. scipy pinned v1.13.1 (https://github.com/theislab/scvelo/issues/1260). macOS ARM scVelo v0.3.2 conda-forge used. latest version available date. scipy pinned v1.13.1 (https://github.com/theislab/scvelo/issues/1260). Windows scVelo v0.2.5 bioconda used. Later versions scVelo depend jaxlib supported Windows (https://github.com/google/jax/issues/438). matplotlib pinned v3.6.3 (https://github.com/scverse/scanpy/issues/2411), pandas pinned v1.5.2 (https://stackoverflow.com/questions/76234312/importerror--import-name--categorical--pandas-api-types), numpy pinned v1.21.1 (https://github.com/theislab/scvelo/issues/1109).","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/scvelo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"RNA velocity with scVelo — scvelo","text":"Bergen, V., Lange, M., Peidli, S. et al. Generalizing RNA velocity transient cell states dynamical modeling. Nat Biotechnol 38, 1408–1414 (2020). https://doi.org/10.1038/s41587-020-0591-3","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/scvelo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"RNA velocity with scVelo — scvelo","text":"Aaron Lun, Charlotte Soneson, Kevin Rue-Albrecht","code":""},{"path":"https://kevinrue.github.io/velociraptor/reference/scvelo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"RNA velocity with scVelo — scvelo","text":"","code":"# Using mock data to demonstrate the process: library(scuttle) sce1 <- mockSCE() sce2 <- mockSCE()  spliced <- counts(sce1) unspliced <- counts(sce2)  out <- scvelo(list(X=spliced, spliced=spliced, unspliced=unspliced))  # make scvelo use 10 rather than the default 30 neighbors to compute moments for velocity estimation: out <- scvelo(list(X=spliced, spliced=spliced, unspliced=unspliced),               scvelo.params=list(neighbors=list(n_neighbors=10L)))"},{"path":"https://kevinrue.github.io/velociraptor/reference/velociraptor-package.html","id":null,"dir":"Reference","previous_headings":"","what":"velociraptor: Toolkit for Single-Cell Velocity — velociraptor-package","title":"velociraptor: Toolkit for Single-Cell Velocity — velociraptor-package","text":"package provides Bioconductor-friendly wrappers RNA velocity calculations single-cell RNA-seq data. use basilisk package manage Conda environments, zellkonverter package convert data structures SingleCellExperiment (R) AnnData (Python). information produced velocity methods stored various components SingleCellExperiment class.","code":""},{"path":[]},{"path":"https://kevinrue.github.io/velociraptor/reference/velociraptor-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"velociraptor: Toolkit for Single-Cell Velocity — velociraptor-package","text":"Maintainer: Kevin Rue-Albrecht kevinrue67@gmail.com (ORCID) Authors: Aaron Lun infinite.monkeys..keyboards@gmail.com (ORCID) Charlotte Soneson charlottesoneson@gmail.com (ORCID) Michael Stadler michael.stadler@fmi.ch (ORCID)","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-11513","dir":"Changelog","previous_headings":"","what":"velociraptor 1.15.13","title":"velociraptor 1.15.13","text":"Add separate environment (untested) Linux Aarch64. break platform already .","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-11512","dir":"Changelog","previous_headings":"","what":"velociraptor 1.15.12","title":"velociraptor 1.15.12","text":"Update Conda environment Linux avoid Anaconda channel.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-11511","dir":"Changelog","previous_headings":"","what":"velociraptor 1.15.11","title":"velociraptor 1.15.11","text":"Re-enable plotVelocityStream() warning.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-11510","dir":"Changelog","previous_headings":"","what":"velociraptor 1.15.10","title":"velociraptor 1.15.10","text":"Temporarily disable plotVelocityStream() due unexplained issue related metr::geom_streamline()","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-1159","dir":"Changelog","previous_headings":"","what":"velociraptor 1.15.9","title":"velociraptor 1.15.9","text":"Update Conda environment Linux MacOSX Arm. Patch GitHub Action use GitHub version remotes.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-1158","dir":"Changelog","previous_headings":"","what":"velociraptor 1.15.8","title":"velociraptor 1.15.8","text":"Update Conda environment using micromamba MacOSX Arm. Fix switch MacOSX MacOSX Arm environments.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-1157","dir":"Changelog","previous_headings":"","what":"velociraptor 1.15.7","title":"velociraptor 1.15.7","text":"Update Conda environment using micromamba Windows.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-1156","dir":"Changelog","previous_headings":"","what":"velociraptor 1.15.6","title":"velociraptor 1.15.6","text":"Update Conda environment use anaconda channel Linux. Passed GitHub Action https://github.com/kevinrue/velociraptor/actions/runs/10612115572/job/29413105915.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-1155","dir":"Changelog","previous_headings":"","what":"velociraptor 1.15.5","title":"velociraptor 1.15.5","text":"Update Conda environment svelo==0.3.2 Linux.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-1154","dir":"Changelog","previous_headings":"","what":"velociraptor 1.15.4","title":"velociraptor 1.15.4","text":"Set scvelo version triggering deprecation error 0.3.1.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-1153","dir":"Changelog","previous_headings":"","what":"velociraptor 1.15.3","title":"velociraptor 1.15.3","text":"Revert environment Linux one Bioconductor release 3.18.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-1152","dir":"Changelog","previous_headings":"","what":"velociraptor 1.15.2","title":"velociraptor 1.15.2","text":"Add environment macOS (Intel); environment macos (M1).","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-1151","dir":"Changelog","previous_headings":"","what":"velociraptor 1.15.1","title":"velociraptor 1.15.1","text":"Fix issue #63. Update scvelo 0.3.2 (conda-forge) macOS (M1) Linux. Update scvelo 0.2.5 (bioconda) Windows. Add mechanism switch Conda environment (scvelo version) based operating system architecture. Use scanpy.pp.neighbors calculate neighbors due deprecation automatic neighbor calculation scvelo.pp.moments. Update vignette document change default value n_neighbors scvelo (30) scanpy (15).","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-1131","dir":"Changelog","previous_headings":"","what":"velociraptor 1.13.1","title":"velociraptor 1.13.1","text":"Robust fallback mechanism using basiliskRun option testload=.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-193","dir":"Changelog","previous_headings":"","what":"velociraptor 1.9.3","title":"velociraptor 1.9.3","text":"Pin python version conda environment.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-192","dir":"Changelog","previous_headings":"","what":"velociraptor 1.9.2","title":"velociraptor 1.9.2","text":"Remove column names reduced dimension matrix gridVectors().","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-152","dir":"Changelog","previous_headings":"","what":"velociraptor 1.5.2","title":"velociraptor 1.5.2","text":"Remove column names reduced dimension representation velocity embedding.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-151","dir":"Changelog","previous_headings":"","what":"velociraptor 1.5.1","title":"velociraptor 1.5.1","text":"Add example scvelo.params argument.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-131","dir":"Changelog","previous_headings":"","what":"velociraptor 1.3.1","title":"velociraptor 1.3.1","text":"Add typing_extensions environment.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-116","dir":"Changelog","previous_headings":"","what":"velociraptor 1.1.6","title":"velociraptor 1.1.6","text":"Move sanity check vignette inst/.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-115","dir":"Changelog","previous_headings":"","what":"velociraptor 1.1.5","title":"velociraptor 1.1.5","text":"Add Michael Stadler package authors.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-114","dir":"Changelog","previous_headings":"","what":"velociraptor 1.1.4","title":"velociraptor 1.1.4","text":"Fix typo documentation.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-113","dir":"Changelog","previous_headings":"","what":"velociraptor 1.1.3","title":"velociraptor 1.1.3","text":"Add vignette subdirectory sanity checks.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-112","dir":"Changelog","previous_headings":"","what":"velociraptor 1.1.2","title":"velociraptor 1.1.2","text":"Add functions plotVelocity plotVelocityStream.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-111","dir":"Changelog","previous_headings":"","what":"velociraptor 1.1.1","title":"velociraptor 1.1.1","text":"Refresh cached environments.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-110","dir":"Changelog","previous_headings":"","what":"velociraptor 1.1.0","title":"velociraptor 1.1.0","text":"Bioconductor release 1.1.0.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-0999","dir":"Changelog","previous_headings":"","what":"velociraptor 0.99.9","title":"velociraptor 0.99.9","text":"Converted various functions S4 generics easier use SingleCellExperiment objects.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-0998","dir":"Changelog","previous_headings":"","what":"velociraptor 0.99.8","title":"velociraptor 0.99.8","text":"Trigger new build repeat ExperimentHub download.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-0997","dir":"Changelog","previous_headings":"","what":"velociraptor 0.99.7","title":"velociraptor 0.99.7","text":"Delete empty line force cache update. See https://github.com/rubocop-hq/rubocop/pull/4342#issuecomment-305449759.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-0996","dir":"Changelog","previous_headings":"","what":"velociraptor 0.99.6","title":"velociraptor 0.99.6","text":"Set autoscale=FALSE call scvelo function velocity_embedding avoid issue related Qt plotting.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-0995","dir":"Changelog","previous_headings":"","what":"velociraptor 0.99.5","title":"velociraptor 0.99.5","text":"Trigger new build check Windows issue resolved .","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-0994","dir":"Changelog","previous_headings":"","what":"velociraptor 0.99.4","title":"velociraptor 0.99.4","text":"Trigger new build check whether TIMEOUT issue Windows reproducible.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-0993","dir":"Changelog","previous_headings":"","what":"velociraptor 0.99.3","title":"velociraptor 0.99.3","text":"Explicitly declare Conda dependencies scvelo.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-0992","dir":"Changelog","previous_headings":"","what":"velociraptor 0.99.2","title":"velociraptor 0.99.2","text":"Add hexsticker.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-0991","dir":"Changelog","previous_headings":"","what":"velociraptor 0.99.1","title":"velociraptor 0.99.1","text":"Remove .Rproj file git repository.","code":""},{"path":"https://kevinrue.github.io/velociraptor/news/index.html","id":"velociraptor-0990","dir":"Changelog","previous_headings":"","what":"velociraptor 0.99.0","title":"velociraptor 0.99.0","text":"First submission Bioconductor.","code":""}]
